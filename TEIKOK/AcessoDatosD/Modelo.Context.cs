

//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------


namespace AcessoDatosD
{

using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;

using System.Data.Entity.Core.Objects;
using System.Linq;


public partial class EJEMPLO1Entities : DbContext
{
    public EJEMPLO1Entities()
        : base("name=EJEMPLO1Entities")
    {

    }

    protected override void OnModelCreating(DbModelBuilder modelBuilder)
    {
        throw new UnintentionalCodeFirstException();
    }


    public virtual DbSet<CLIENTES> CLIENTES { get; set; }

    public virtual DbSet<ACCESO_DATOS> ACCESO_DATOS { get; set; }

    public virtual DbSet<PRODUCTO> PRODUCTO { get; set; }


    public virtual ObjectResult<sp_insertar_clientes_Result> sp_insertar_clientes(string strCedula, string strNombre, string strApellido, string strTelefono, string strDireccion, string strEmail)
    {

        var strCedulaParameter = strCedula != null ?
            new ObjectParameter("strCedula", strCedula) :
            new ObjectParameter("strCedula", typeof(string));


        var strNombreParameter = strNombre != null ?
            new ObjectParameter("strNombre", strNombre) :
            new ObjectParameter("strNombre", typeof(string));


        var strApellidoParameter = strApellido != null ?
            new ObjectParameter("strApellido", strApellido) :
            new ObjectParameter("strApellido", typeof(string));


        var strTelefonoParameter = strTelefono != null ?
            new ObjectParameter("strTelefono", strTelefono) :
            new ObjectParameter("strTelefono", typeof(string));


        var strDireccionParameter = strDireccion != null ?
            new ObjectParameter("strDireccion", strDireccion) :
            new ObjectParameter("strDireccion", typeof(string));


        var strEmailParameter = strEmail != null ?
            new ObjectParameter("strEmail", strEmail) :
            new ObjectParameter("strEmail", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_insertar_clientes_Result>("sp_insertar_clientes", strCedulaParameter, strNombreParameter, strApellidoParameter, strTelefonoParameter, strDireccionParameter, strEmailParameter);
    }


    public virtual ObjectResult<sp_inserta_productos_Result> sp_inserta_productos(string strNombreProducto, Nullable<decimal> decPrecio, Nullable<int> intCategoria)
    {

        var strNombreProductoParameter = strNombreProducto != null ?
            new ObjectParameter("strNombreProducto", strNombreProducto) :
            new ObjectParameter("strNombreProducto", typeof(string));


        var decPrecioParameter = decPrecio.HasValue ?
            new ObjectParameter("decPrecio", decPrecio) :
            new ObjectParameter("decPrecio", typeof(decimal));


        var intCategoriaParameter = intCategoria.HasValue ?
            new ObjectParameter("intCategoria", intCategoria) :
            new ObjectParameter("intCategoria", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_inserta_productos_Result>("sp_inserta_productos", strNombreProductoParameter, decPrecioParameter, intCategoriaParameter);
    }

}

}

